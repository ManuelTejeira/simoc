version: '3.7'
services:
  nginx:
    image: nginx
    ports:
      - '${APP_PORT}:${APP_PORT}'
    networks:
      - simoc-net
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - flask-app
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  simoc-db:
    image: mysql/mysql-server
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - '${DB_PORT}:${DB_PORT}'
    networks:
      - simoc-net
    environment:
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  redis:
    image: bitnami/redis:latest
    ports:
      - 6379:6379
    networks:
      - simoc-net
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile-celery-worker
    image: 127.0.0.1:5000/celery-worker
    networks:
      - simoc-net
    healthcheck:
      test: ['CMD', 'bash', 'ping_worker.sh']
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 30s
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      DB_TYPE: ${DB_TYPE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - .:/simoc
    depends_on:
      - simoc-db
      - redis
    deploy:
      replicas: ${CELERY_WORKERS}
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '.5'
          memory: 300M
  flask-app:
    build: .
    image: 127.0.0.1:5000/flask-app
    ports:
      - 8080
    networks:
      - simoc-net
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/ping']
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 30s
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      DB_TYPE: ${DB_TYPE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - .:/simoc
    depends_on:
      - simoc-db
      - redis
    deploy:
      replicas: ${FLASK_WORKERS}
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '.2'
          memory: 300M

volumes:
  db-data: {}

networks:
  simoc-net:
    driver: overlay
    attachable: true
