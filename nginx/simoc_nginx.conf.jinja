upstream socketio_nodes {
    ip_hash;
    server flask-app:8080;
}

upstream http_nodes {
    server flask-app:8080;
}

server {
    listen {{ http_port }};
    server_name {{ server_name }};
    error_log /dev/stdout debug;
    {% if add_basic_auth %}
    {% if redirect_to_ssl != true %}
    auth_basic "Restricted Files";
    auth_basic_user_file /etc/nginx/htpasswd;
    {% endif %}
    {% endif %}
    {% if use_certbot %}
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    {% endif %}
    {% if redirect_to_ssl %}
    location / {
        return 301 https://$host:8443$request_uri;
    }
    {% else %}
    location / {
    {% if valid_referers %}
        valid_referers {{ valid_referers }}*;
        if ($invalid_referer) {
            return 403;
        }
    {% endif %}
        include proxy_params;
        proxy_pass http://http_nodes;
    }
    location /socket.io {
        include proxy_params;
        include proxy_ws_params;
        proxy_pass http://socketio_nodes/socket.io;
    }
    {% endif %}
}
{% if use_ssl %}
server {
    listen {{ https_port }} ssl http2;
    server_name {{ server_name }};
    error_log /dev/stdout debug;
    {% if use_certbot %}
    ssl_certificate /etc/letsencrypt/live/{{ server_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ server_name }}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    {% else %}
    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;
    {% endif %}
    {% if add_basic_auth %}
    auth_basic "Restricted Files";
    auth_basic_user_file /etc/nginx/htpasswd;
    {% endif %}
    location / {
        {% if valid_referers %}
        valid_referers {{ valid_referers }}*;
        if ($invalid_referer) {
            return 403;
        }
        {% endif %}
        include proxy_params;
        proxy_pass http://http_nodes;
    }
    location /socket.io {
        include proxy_params;
        include proxy_ws_params;
        proxy_pass http://socketio_nodes/socket.io;
    }
}
{% endif %}
